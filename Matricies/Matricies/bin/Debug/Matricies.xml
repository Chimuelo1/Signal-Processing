<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Matricies</name>
    </assembly>
    <members>
        <member name="T:Matricies.Matrix">
            <summary>
            A Matrix composed of an array of arrays with doubles as values
            </summary>
        </member>
        <member name="M:Matricies.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a blank Matrix with 0 values of the designated size
            </summary>
            <param name="rows">The number of rows in the new Matrix</param>
            <param name="columns">The number of columns in the new Matrix</param>
        </member>
        <member name="M:Matricies.Matrix.#ctor(Matricies.Point)">
            <summary>
            Creates a Matrix based arount an (x,y) Point
            </summary>
            <param name="p">The Point</param>
        </member>
        <member name="M:Matricies.Matrix.GetRow(System.Int32)">
            <summary>
            Gets an array of the desired row
            </summary>
            <param name="index">The index of the row</param>
            <returns>An array containing the values of the row</returns>
        </member>
        <member name="M:Matricies.Matrix.GetColumn(System.Int32)">
            <summary>
            Gets an array of the desired column
            </summary>
            <param name="index">The index of the column</param>
            <returns>An array containing the values of the column</returns>
        </member>
        <member name="M:Matricies.Matrix.GetHeight">
            <summary>
            Gets the height of the Matrix
            </summary>
            <returns>The height of the Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.GetWidth">
            <summary>
            Gets the width of the Matrix
            </summary>
            <returns>The width of the Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.Print">
            <summary>
            Prints the Matrix to Console
            </summary>
        </member>
        <member name="M:Matricies.Matrix.WriteToFile(System.String)">
            <summary>
            Writes this Matrix to a CSV file
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="P:Matricies.Matrix.Item(System.Int32)">
            <summary>
            Overrides the Matrix[i] operator to allow acces to the Matrix's values 
            </summary>
            <param name="i">The index to get</param>
            <returns>The array at the given index</returns>
        </member>
        <member name="M:Matricies.Matrix.CopyOf">
            <summary>
            Creates a deep copy of this Matrix
            </summary>
            <returns>A copy of the Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.IsSquare">
            <summary>
            Checks if the Matrix is a square Matrix
            </summary>
            <returns>True if the Matrix is square, false otherwise</returns>
        </member>
        <member name="M:Matricies.Matrix.GetIdentityMatrix">
            <summary>
            Gets the identity Matrix of the same size as the current Matrix
            </summary>
            <returns>The identity Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.GetTranspose">
            <summary>
            Creates a new Matrix of the transpose for this Matrix
            </summary>
            <returns>The transpose of this Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.SwapRows(System.Int32,System.Int32)">
            <summary>
            Swaps two rows inside of the Matrix
            </summary>
            <param name="rowA">The index of the first row to swap</param>
            <param name="rowB">The index of the second row to swap</param>
        </member>
        <member name="M:Matricies.Matrix.CombineWith(Matricies.Matrix)">
            <summary>
            Combines this Matrix with another
            </summary>
            <param name="other">The other Matrix</param>
            <returns>The combination of the two Matricies</returns>
        </member>
        <member name="M:Matricies.Matrix.GetTrace">
            <summary>
            Calculates the sum of the diagonal from top left to bottom right
            </summary>
            <returns>The trace value of the Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.FaddeevLeVerrier">
            <summary>
            Finds the coefficients of the characteristic polynomial
            </summary>
            <returns>The coefficients in an Array for the characteristic polynomial</returns>
        </member>
        <member name="M:Matricies.Matrix.FindEigenValues">
            <summary>
            Finds the EigenValues for a Matrix.
            </summary>
            <returns>The EigenValues for the Matrix in an array</returns>
        </member>
        <member name="M:Matricies.Matrix.FindEigenVector(System.Double)">
            <summary>
            Finds the Eigenvector of an Eigenvalue
            </summary>
            <param name="eigenValue">The current Eigenvalue</param>
            <returns>The eigenVector matching the eigenvalue</returns>
        </member>
        <member name="M:Matricies.Matrix.GaussianElimination">
            <summary>
            GaussianElimination implementation
            </summary>
            <returns>The result of Gaussian Elimination</returns>
        </member>
        <member name="M:Matricies.Matrix.DirectMethod">
            <summary>
            Implementation of the Direct power method for estimating eigenvalues
            </summary>
            <returns>The strongest eigenvalue</returns>
        </member>
        <member name="M:Matricies.Matrix.GetInverse">
            <summary>
            Calculates the Inverse Matrix
            </summary>
            <returns>The inverse Matrix</returns>
        </member>
        <member name="M:Matricies.Matrix.FindDeterminant">
            <summary>
            Finds the Determinant of the Matrix
            </summary>
            <returns>The Determinant</returns>
        </member>
        <member name="M:Matricies.Matrix.GetFromFile(System.String)">
            <summary>
            Gets a Matrix from a text file delimited by tabs and new lines
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Matricies.Matrix.FindUnitLengthVector(System.Double[])">
            <summary>
            Finds the Unit Length Vector of an Eigenvector
            </summary>
            <param name="eigenVector">The Eigenvector</param>
            <returns>The Unit Length Vector</returns>
        </member>
        <member name="M:Matricies.Matrix.FindUnitLength(System.Double[])">
            <summary>
            Finds the Unit length of an eigenvector
            </summary>
            <param name="eigenVector">The eigenvector</param>
            <returns>The unit length of an eigenvector</returns>
        </member>
        <member name="M:Matricies.Matrix.FindUnitLength(Matricies.Matrix)">
            <summary>
            Finds the Unit length of an eigenvector
            </summary>
            <param name="eigenVector">The eigenvector</param>
            <returns>The unit length of an eigenvector</returns>
        </member>
        <member name="M:Matricies.Matrix.op_Multiply(Matricies.Matrix,Matricies.Matrix)">
            <summary>
            Overrides the * operator to allow multiplication between Matricies
            </summary>
            <param name="a">The first Matrix</param>
            <param name="b">The second Matrix</param>
            <returns>The product of the two Matricies</returns>
        </member>
        <member name="M:Matricies.Matrix.op_Multiply(Matricies.Matrix,System.Double)">
            <summary>
            Overrides the * operator to allow Matrix multiplication by a scalar
            </summary>
            <param name="a">The Matrix being multiplied</param>
            <param name="scalar">The scalar to multiply by</param>
            <returns>The product of the multiplication</returns>
        </member>
        <member name="M:Matricies.Matrix.op_Addition(Matricies.Matrix,Matricies.Matrix)">
            <summary>
            Overrides the + operator to allow Matrix addition
            </summary>
            <param name="a">The first Matrix</param>
            <param name="b">The second Matrix</param>
            <returns>The sum of the two Matricies</returns>
        </member>
        <member name="M:Matricies.Matrix.op_Subtraction(Matricies.Matrix,Matricies.Matrix)">
            <summary>
            Overrides the - operator to allow Matrix subtraction
            </summary>
            <param name="a">The first Matrix</param>
            <param name="b">The second Matrix</param>
            <returns>The difference of the two Matricies</returns>
        </member>
        <member name="T:Matricies.Point">
            <summary>
            A Point on an (x,y) axis
            </summary>
        </member>
        <member name="M:Matricies.Point.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new Point
            </summary>
            <param name="x">The x coordinate</param>
            <param name="y">The y coordinate</param>
        </member>
        <member name="M:Matricies.Point.GetX">
            <summary>
            Gets the X coordinate
            </summary>
            <returns>The X coordinate</returns>
        </member>
        <member name="M:Matricies.Point.GetY">
            <summary>
            Gets the Y coordinate
            </summary>
            <returns>The Y coordinate</returns>
        </member>
        <member name="M:Matricies.Point.AsArray">
            <summary>
            Converts the Point to a double[]
            </summary>
            <returns>A double[] representation of the Point</returns>
        </member>
        <member name="M:Matricies.Point.SetX(System.Double)">
            <summary>
            Changes the X coordinate
            </summary>
            <param name="x">The new X coordinate</param>
        </member>
        <member name="M:Matricies.Point.SetY(System.Double)">
            <summary>
            Changes the Y coordinate
            </summary>
            <param name="y">The new Y coordinate</param>
        </member>
        <member name="M:Matricies.Point.ToString">
            <summary>
            Puts the Point in the form: (x,y)
            </summary>
            <returns>(x,y)</returns>
        </member>
        <member name="M:Matricies.Point.op_Subtraction(Matricies.Point,Matricies.Point)">
            <summary>
            Subtracts Point b from Point a
            </summary>
            <param name="a">The first Point</param>
            <param name="b">The second Point</param>
            <returns></returns>
        </member>
        <member name="M:Matricies.Point.op_Addition(Matricies.Point,Matricies.Point)">
            <summary>
            Adds Point a with Point b
            </summary>
            <param name="a">The first Point</param>
            <param name="b">The second Point</param>
            <returns></returns>
        </member>
        <member name="M:Matricies.Point.op_Multiply(Matricies.Point,System.Double)">
            <summary>
            Multiplies Point a by a scalar
            </summary>
            <param name="a">The Point</param>
            <param name="scalar">The Scalar</param>
            <returns></returns>
        </member>
        <member name="M:Matricies.Point.op_Division(Matricies.Point,System.Double)">
            <summary>
            Divides Point a by a scalar
            </summary>
            <param name="a">The Point</param>
            <param name="scalar">The Scalar</param>
            <returns></returns>
        </member>
        <member name="T:Matricies.UnknownClass">
            <summary>
            An unknown class made up of a List of Points
            </summary>
        </member>
        <member name="M:Matricies.UnknownClass.#ctor(System.Collections.Generic.List{Matricies.Point})">
            <summary>
            Creates a new Class made of a List of Points
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Matricies.UnknownClass.GetPoints">
            <summary>
            Gets the List of Points
            </summary>
            <returns>The List of Points</returns>
        </member>
        <member name="M:Matricies.UnknownClass.AddPoint(Matricies.Point)">
            <summary>
            Adds a Point to the Point List
            </summary>
            <param name="point">The Point to add</param>
        </member>
        <member name="M:Matricies.UnknownClass.GetMean">
            <summary>
            Gets the Average of all the Points
            </summary>
            <returns>The Average Point</returns>
        </member>
        <member name="M:Matricies.UnknownClass.SubtractMeanVector">
            <summary>
            Subtracts the Average Point from each Point in the List
            </summary>
            <returns>A new List of Points with the mean Point subtracted from each Point</returns>
        </member>
        <member name="M:Matricies.UnknownClass.GetSquareMatricies">
            <summary>
            Creates an array of square matricies out of the List of Points
            </summary>
            <returns>An array of square matricies</returns>
        </member>
        <member name="M:Matricies.UnknownClass.GetCovarianceMatrix">
            <summary>
            Calculates the Covariance Matrix for the class
            </summary>
            <returns>The Covariance Matrix</returns>
        </member>
    </members>
</doc>
